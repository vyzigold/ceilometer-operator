---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: autoscalings.telemetry.openstack.org
spec:
  group: telemetry.openstack.org
  names:
    kind: Autoscaling
    listKind: AutoscalingList
    plural: autoscalings
    singular: autoscaling
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: Autoscaling is the Schema for the autoscalings API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AutoscalingSpec defines the desired state of Autoscaling
            properties:
              aodh:
                description: Aodh defines the aodh component spec
                properties:
                  apiImage:
                    type: string
                  customServiceConfig:
                    default: '# add your customization here'
                    description: CustomServiceConfig - customize the service config
                      using this parameter to change service defaults, or overwrite
                      rendered information using raw OpenStack config format. The
                      content gets added to to /etc/<service>/<service>.conf.d directory
                      as custom.conf file.
                    type: string
                  databaseInstance:
                    description: MariaDB instance name Right now required by the maridb-operator
                      to get the credentials from the instance to create the DB Might
                      not be required in future
                    type: string
                  databaseUser:
                    default: aodh
                    description: Database user name Needed to connect to a database
                      used by aodh
                    type: string
                  defaultConfigOverwrite:
                    additionalProperties:
                      type: string
                    description: 'ConfigOverwrite - interface to overwrite default
                      config files like e.g. logging.conf or policy.json. But can
                      also be used to add additional files. Those get added to the
                      service config dir in /etc/<service> . TODO: -> implement'
                    type: object
                  evaluatorImage:
                    type: string
                  initImage:
                    type: string
                  listenerImage:
                    type: string
                  networkAttachmentDefinitions:
                    description: NetworkAttachmentDefinitions list of network attachment
                      definitions the service pod gets attached to
                    items:
                      type: string
                    type: array
                  notifierImage:
                    type: string
                  passwordSelector:
                    default:
                      service: CeilometerPassword
                    description: PasswordSelectors - Selectors to identify the service
                      from the Secret
                    properties:
                      aodhService:
                        default: AodhPassword
                        description: AodhService - Selector to get the aodh service
                          password from the Secret
                        type: string
                      database:
                        default: AodhDatabasePassword
                        description: Database - Selector to get the aodh database
                          user password from the Secret
                        type: string
                      service:
                        default: CeilometerPassword
                        description: Service - Selector to get the ceilometer service
                          password from the Secret
                        type: string
                    type: object
                  preserveJobs:
                    default: false
                    description: PreserveJobs - do not delete jobs after they finished
                      e.g. to check logs
                    type: boolean
                  rabbitMqClusterName:
                    default: rabbitmq
                    description: RabbitMQ instance name Needed to request a transportURL
                      that is created and used in Aodh
                    type: string
                  secret:
                    description: Secret containing OpenStack password information
                      for aodh
                    type: string
                  serviceUser:
                    default: aodh
                    description: ServiceUser - optional username used for this service
                      to register in keystone
                    type: string
                required:
                - apiImage
                - databaseInstance
                - evaluatorImage
                - initImage
                - listenerImage
                - notifierImage
                - secret
                type: object
              enabled:
                default: false
                description: Allows enabling and disabling the autoscaling feature
                type: boolean
              prometheus:
                description: Specification of which prometheus to use for autoscaling
                properties:
                  deployPrometheus:
                    default: false
                    description: Enables the deployment of autoscaling prometheus
                    type: boolean
                  host:
                    description: Host of user deployed prometheus if deployPrometheus
                      is set to false
                    type: string
                  port:
                    description: Port of user deployed prometheus if deployPrometheus
                      is set to false
                    format: int32
                    maximum: 65535
                    minimum: 1
                    type: integer
                type: object
            type: object
          status:
            description: AutoscalingStatus defines the observed state of Autoscaling
            properties:
              conditions:
                description: Conditions
                items:
                  description: Condition defines an observation of a API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase.
                      type: string
                    severity:
                      description: Severity provides a classification of Reason code,
                        so the current situation is immediately understandable and
                        could act accordingly. It is meant for situations where Status=False
                        and it should be indicated if it is just informational, warning
                        (next reconciliation might fix it) or an error (e.g. DB create
                        issue and no actions to automatically resolve the issue can/should
                        be done). For conditions where Status=Unknown or Status=True
                        the Severity should be SeverityNone.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              databaseHostname:
                description: DatabaseHostname - Hostname for the database
                type: string
              hash:
                additionalProperties:
                  type: string
                description: Map of hashes to track e.g. job status
                type: object
              networks:
                description: Networks in addtion to the cluster network, the service
                  is attached to
                items:
                  type: string
                type: array
              readyCount:
                description: ReadyCount of autoscaling instances
                format: int32
                type: integer
              transportURLSecret:
                description: TransportURLSecret - Secret containing RabbitMQ transportURL
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
