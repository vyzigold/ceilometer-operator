---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: telemetries.telemetry.openstack.org
spec:
  group: telemetry.openstack.org
  names:
    kind: Telemetry
    listKind: TelemetryList
    plural: telemetries
    singular: telemetry
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: Telemetry is the Schema for the telemetry API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TelemetrySpec defines the desired state of Telemetry
            properties:
              autoscaling:
                description: Autoscaling - Spec definition for the Autoscaling service
                  of this Telemetry deployment
                properties:
                  aodh:
                    description: Aodh defines the aodh component spec
                    properties:
                      apiImage:
                        type: string
                      customServiceConfig:
                        default: '# add your customization here'
                        description: CustomServiceConfig - customize the service config
                          using this parameter to change service defaults, or overwrite
                          rendered information using raw OpenStack config format.
                          The content gets added to to /etc/<service>/<service>.conf.d
                          directory as custom.conf file.
                        type: string
                      databaseInstance:
                        description: MariaDB instance name Right now required by the
                          maridb-operator to get the credentials from the instance
                          to create the DB Might not be required in future
                        type: string
                      databaseUser:
                        default: aodh
                        description: Database user name Needed to connect to a database
                          used by aodh
                        type: string
                      defaultConfigOverwrite:
                        additionalProperties:
                          type: string
                        description: 'ConfigOverwrite - interface to overwrite default
                          config files like e.g. logging.conf or policy.json. But
                          can also be used to add additional files. Those get added
                          to the service config dir in /etc/<service> . TODO: -> implement'
                        type: object
                      evaluatorImage:
                        type: string
                      listenerImage:
                        type: string
                      memcachedInstance:
                        default: memcached
                        description: Memcached instance name.
                        type: string
                      networkAttachmentDefinitions:
                        description: NetworkAttachmentDefinitions list of network
                          attachment definitions the service pod gets attached to
                        items:
                          type: string
                        type: array
                      notifierImage:
                        type: string
                      passwordSelector:
                        default:
                          aodhService: AodhPassword
                        description: PasswordSelectors - Selectors to identify the
                          service from the Secret
                        properties:
                          aodhService:
                            default: AodhPassword
                            description: AodhService - Selector to get the aodh service
                              password from the Secret
                            type: string
                          database:
                            default: AodhDatabasePassword
                            description: Database - Selector to get the aodh database
                              user password from the Secret
                            type: string
                          service:
                            default: CeilometerPassword
                            description: Service - Selector to get the ceilometer
                              service password from the Secret
                            type: string
                        type: object
                      preserveJobs:
                        default: false
                        description: PreserveJobs - do not delete jobs after they
                          finished e.g. to check logs
                        type: boolean
                      rabbitMqClusterName:
                        default: rabbitmq
                        description: RabbitMQ instance name Needed to request a transportURL
                          that is created and used in Aodh
                        type: string
                      secret:
                        description: Secret containing OpenStack password information
                          for aodh
                        type: string
                      serviceUser:
                        default: aodh
                        description: ServiceUser - optional username used for this
                          service to register in keystone
                        type: string
                    required:
                    - apiImage
                    - databaseInstance
                    - evaluatorImage
                    - listenerImage
                    - memcachedInstance
                    - notifierImage
                    - secret
                    type: object
                  enabled:
                    default: false
                    description: Allows enabling and disabling the autoscaling feature
                    type: boolean
                  prometheus:
                    description: Specification of which prometheus to use for autoscaling
                    properties:
                      deployPrometheus:
                        default: false
                        description: Enables the deployment of autoscaling prometheus
                        type: boolean
                      host:
                        description: Host of user deployed prometheus if deployPrometheus
                          is set to false
                        type: string
                      port:
                        description: Port of user deployed prometheus if deployPrometheus
                          is set to false
                        format: int32
                        maximum: 65535
                        minimum: 1
                        type: integer
                    type: object
                type: object
              ceilometer:
                description: Ceilometer - Spec definition for the Ceilometer service
                  of this Telemetry deployment
                properties:
                  centralImage:
                    type: string
                  computeImage:
                    type: string
                  customServiceConfig:
                    default: '# add your customization here'
                    description: CustomServiceConfig - customize the service config
                      using this parameter to change service defaults, or overwrite
                      rendered information using raw OpenStack config format. The
                      content gets added to to /etc/<service>/<service>.conf.d directory
                      as custom.conf file.
                    type: string
                  defaultConfigOverwrite:
                    additionalProperties:
                      type: string
                    description: 'ConfigOverwrite - interface to overwrite default
                      config files like e.g. logging.conf or policy.json. But can
                      also be used to add additional files. Those get added to the
                      service config dir in /etc/<service> . TODO: -> implement'
                    type: object
                  ipmiImage:
                    type: string
                  networkAttachmentDefinitions:
                    description: NetworkAttachmentDefinitions list of network attachment
                      definitions the service pod gets attached to
                    items:
                      type: string
                    type: array
                  nodeExporterImage:
                    type: string
                  notificationImage:
                    type: string
                  passwordSelector:
                    default:
                      service: CeilometerPassword
                    description: PasswordSelectors - Selectors to identify the service
                      from the Secret
                    properties:
                      aodhService:
                        default: AodhPassword
                        description: AodhService - Selector to get the aodh service
                          password from the Secret
                        type: string
                      database:
                        default: AodhDatabasePassword
                        description: Database - Selector to get the aodh database
                          user password from the Secret
                        type: string
                      service:
                        default: CeilometerPassword
                        description: Service - Selector to get the ceilometer service
                          password from the Secret
                        type: string
                    type: object
                  rabbitMqClusterName:
                    default: rabbitmq
                    description: RabbitMQ instance name Needed to request a transportURL
                      that is created and used in Telemetry
                    type: string
                  secret:
                    description: Secret containing OpenStack password information
                      for ceilometer
                    type: string
                  serviceUser:
                    default: ceilometer
                    description: ServiceUser - optional username used for this service
                      to register in keystone
                    type: string
                  sgCoreImage:
                    type: string
                required:
                - centralImage
                - computeImage
                - ipmiImage
                - nodeExporterImage
                - notificationImage
                - secret
                - sgCoreImage
                type: object
            required:
            - autoscaling
            - ceilometer
            type: object
          status:
            description: TelemetryStatus defines the observed state of Telemetry
            properties:
              autoscalingReadyCount:
                description: ReadyCount of Autoscaling instance
                format: int32
                type: integer
              ceilometerReadyCount:
                description: ReadyCount of Ceilometer instance
                format: int32
                type: integer
              conditions:
                description: Conditions
                items:
                  description: Condition defines an observation of a API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase.
                      type: string
                    severity:
                      description: Severity provides a classification of Reason code,
                        so the current situation is immediately understandable and
                        could act accordingly. It is meant for situations where Status=False
                        and it should be indicated if it is just informational, warning
                        (next reconciliation might fix it) or an error (e.g. DB create
                        issue and no actions to automatically resolve the issue can/should
                        be done). For conditions where Status=Unknown or Status=True
                        the Severity should be SeverityNone.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              hash:
                additionalProperties:
                  type: string
                description: Map of hashes to track e.g. job status
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
